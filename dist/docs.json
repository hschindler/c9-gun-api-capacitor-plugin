{
  "api": {
    "name": "C9GunApiCapacitorPlugin",
    "slug": "c9gunapicapacitorplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "echo",
        "signature": "(options: { value: string; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "any",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "echo"
      },
      {
        "name": "getFirmware",
        "signature": "() => any",
        "parameters": [],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Gets RFID UHF reader firmware.",
        "complexTypes": [],
        "slug": "getfirmware"
      },
      {
        "name": "startBarcodeInventory",
        "signature": "(options: { value: string; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.1.0"
          }
        ],
        "docs": "Starts Barcode inventory.",
        "complexTypes": [],
        "slug": "startbarcodeinventory"
      },
      {
        "name": "stopBarcodeInventory",
        "signature": "() => any",
        "parameters": [],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.1.0"
          }
        ],
        "docs": "Stops Barcode inventory.",
        "complexTypes": [],
        "slug": "stopbarcodeinventory"
      },
      {
        "name": "startInventory",
        "signature": "(options: { value: string; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Starts RFID UHF inventory.",
        "complexTypes": [],
        "slug": "startinventory"
      },
      {
        "name": "stopInventory",
        "signature": "() => any",
        "parameters": [],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Stops RFID UHF inventory.",
        "complexTypes": [],
        "slug": "stopinventory"
      },
      {
        "name": "setOutputPower",
        "signature": "(options: { value: number; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: number; }"
          }
        ],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Sets RFID UHF output power.",
        "complexTypes": [],
        "slug": "setoutputpower"
      },
      {
        "name": "getOutputPower",
        "signature": "() => any",
        "parameters": [],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Sets RFID UHF output power.",
        "complexTypes": [],
        "slug": "getoutputpower"
      },
      {
        "name": "writeEPCToTagByEPC",
        "signature": "(options: { filteredTagEPC: string; newEPC: string; }) => any",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ filteredTagEPC: string; newEPC: string; }"
          }
        ],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Write EPC to Tag by selected EPC.",
        "complexTypes": [],
        "slug": "writeepctotagbyepc"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'scanButtonPressed' | 'barcodeReceived', listenerFunc: ScanButtonPressedListener) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "\"scanButtonPressed\" | \"barcodeReceived\""
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "any",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Listen for scanButtonPressed",
        "complexTypes": [
          "ScanButtonPressedListener",
          "PluginListenerHandle"
        ],
        "slug": "addlistener"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => any"
        }
      ]
    }
  ],
  "enums": []
}